<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Python Tycoon Prototype</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="game">
        <h1>Python Tycoon Prototype</h1>
        <div id="game-state"></div>
        <div id="actions">
            <button onclick="selectAction('Breed')">Breed Snakes</button>
            <button onclick="selectAction('Sell')">Sell Snake</button>
            <button onclick="selectAction('Buy')">Buy Snake</button>
            <button onclick="selectAction('Expo')">Visit Expo</button>
            <button onclick="selectAction('Next')">Next Turn</button>
        </div>
        <div id="output"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f0f0f0;
    margin: 0;
    padding: 0;
}

#game {
    max-width: 100%;
    padding: 10px;
    box-sizing: border-box;
}

h1 {
    font-size: 1.5em;
}

button {
    margin: 5px;
    padding: 8px;
    font-size: 14px;
    width: 120px;
}

#game-state, #output {
    margin: 10px 0;
    text-align: left;
    font-size: 14px;
}

input {
    margin: 5px;
    padding: 5px;
    width: 100px;
}

/* Mobile adjustments */
@media (max-width: 600px) {
    h1 {
        font-size: 1.2em;
    }
    button {
        width: 100%;
        max-width: 200px;
        font-size: 12px;
    }
    input {
        width: 80%;
        max-width: 150px;
    }
    #game-state, #output {
        font-size: 12px;
    }
}// Game state
let player = {
    currency: 500,
    snakes: [
        { name: "Normal", genes: [], puzzleInfluenceScore: 0, basePrice: 25 },
        { name: "Pastel", genes: ["Pastel"], puzzleInfluenceScore: 10, basePrice: 50 }
    ],
    reputation: 0
};
let turn = 1;
let marketPrices = {
    "Normal": 25, "Pastel": 50, "Banana": 100, "Black Pastel": 120, "Piebald": 400,
    "Clown": 450, "Axanthic": 800, "Patternless": 1000, "Puzzle": 4000, "Zu": 1200,
    "Pastel Yellow Belly": 150, "Banana Bee": 200, "Pastel Clown": 500, "Black Pastel Piebald": 600,
    "Killer Clown": 1000, "Blue-Eyed Lucy": 1200, "Puzzle Pastel": 5000, "Puzzle Clown": 6000,
    "Puzzle Piebald": 7500, "Puzzle Axanthic": 8000
};

// Wait for DOM to load before running initial display
window.onload = function() {
    displayGameState();
};

function displayGameState() {
    const gameStateDiv = document.getElementById("game-state");
    if (!gameStateDiv) {
        console.error("Game state div not found!");
        return;
    }
    let state = `Turn: ${turn} | Currency: $${player.currency.toFixed(2)} | Snakes: ${player.snakes.length} | Reputation: ${player.reputation}<br><br>`;
    state += "[Your Snakes]<br>";
    player.snakes.forEach((snake, index) => {
        state += `${index + 1}. ${snake.name} ($${snake.basePrice}) | Puzzle Influence: ${snake.puzzleInfluenceScore.toFixed(0)}<br>`;
    });
    state += "<br>[Market Prices]<br>";
    let priceLine = "";
    for (let morph in marketPrices) {
        priceLine += `${morph}: $${marketPrices[morph]} | `;
    }
    state += priceLine;
    gameStateDiv.innerHTML = state;
}

function selectAction(action) {
    let output = "";
    const outputDiv = document.getElementById("output");
    if (!outputDiv) {
        console.error("Output div not found!");
        return;
    }
    if (action === "Breed") {
        output = breedSnakes();
    } else if (action === "Sell") {
        output = sellSnake();
    } else if (action === "Buy") {
        output = buySnake();
    } else if (action === "Expo") {
        if (turn % 5 === 0) {
            output = expo();
        } else {
            output = `Expo not available until Turn ${turn + (5 - turn % 5)}`;
        }
    } else if (action === "Next") {
        player.currency -= calculateCosts();
        turn++;
        updateMarketPrices();
        output = "Turn advanced! Costs paid.";
    }
    outputDiv.innerHTML = output;
    displayGameState();
}

function calculateCosts() {
    return player.snakes.length * (1 + 0.5 + 0.1) + 10;  // $1 rats + $0.50 electricity + $0.10 water + $10 rent
}

function updateMarketPrices() {
    for (let morph in marketPrices) {
        marketPrices[morph] = Math.round(marketPrices[morph] * (0.9 + Math.random() * 0.2));  // ±10%
    }
}

function breedSnakes() {
    if (player.snakes.length < 2) return "Need at least 2 snakes to breed!";
    let output = "Select two snakes to breed (enter numbers separated by a space):<br>";
    player.snakes.forEach((snake, index) => {
        output += `${index + 1}. ${snake.name}<br>`;
    });
    output += '<input id="breedInput" type="text" placeholder="e.g., 1 2"><button onclick="executeBreed()">Breed</button>';
    return output;
}

function executeBreed() {
    const input = document.getElementById("breedInput")?.value.split(" ") || [];
    const index1 = parseInt(input[0]) - 1;
    const index2 = parseInt(input[1]) - 1;
    const outputDiv = document.getElementById("output");
    if (!outputDiv || isNaN(index1) || isNaN(index2) || index1 < 0 || index2 < 0 || index1 >= player.snakes.length || index2 >= player.snakes.length) {
        if (outputDiv) outputDiv.innerHTML = "Invalid selection!";
        return;
    }
    const parent1 = player.snakes[index1];
    const parent2 = player.snakes[index2];
    player.currency -= 15;  // $10 rats + $5 electricity
    const offspringCount = Math.floor(Math.random() * 3) + 2;  // 2–4
    let output = `Breeding ${parent1.name} with ${parent2.name}...<br>`;
    for (let i = 0; i < offspringCount; i++) {
        let childGenes = [];
        // Simplified genetics
        parent1.genes.forEach(gene => {
            if (["Pastel", "Banana", "Black Pastel"].includes(gene) && Math.random() < 0.5) {
                childGenes.push(gene);
            } else if (["Piebald", "Clown", "Axanthic", "Patternless", "Zu"].includes(gene) && parent2.genes.includes(gene) && Math.random() < 0.25) {
                childGenes.push(gene);
            }
        });
        parent2.genes.forEach(gene => {
            if (!childGenes.includes(gene) && ["Pastel", "Banana", "Black Pastel"].includes(gene) && Math.random() < 0.5) {
                childGenes.push(gene);
            }
        });
        // Puzzle Influence
        let puzzleScore = (parent1.puzzleInfluenceScore + parent2.puzzleInfluenceScore) / 2 + (Math.random() * 20 - 10);
        if (puzzleScore >= 90) childGenes.push("Puzzle");
        const childName = determineMorphName(childGenes);
        const childPrice = marketPrices[childName] || 25;  // Default to Normal price
        const child = { name: childName, genes: childGenes, puzzleInfluenceScore: puzzleScore, basePrice: childPrice };
        player.snakes.push(child);
        output += `Offspring ${i + 1}: ${childName} ($${childPrice}) | Puzzle Influence: ${puzzleScore.toFixed(0)}<br>`;
    }
    outputDiv.innerHTML = output;
    displayGameState();
}

function determineMorphName(genes) {
    if (genes.includes("Puzzle")) {
        if (genes.includes("Pastel")) return "Puzzle Pastel";
        if (genes.includes("Clown")) return "Puzzle Clown";
        if (genes.includes("Piebald")) return "Puzzle Piebald";
        if (genes.includes("Axanthic")) return "Puzzle Axanthic";
        return "Puzzle";
    }
    if (genes.length === 0) return "Normal";
    if (genes.length === 1) return genes[0];
    if (genes.includes("Pastel") && genes.includes("Clown")) return "Pastel Clown";
    if (genes.includes("Banana") && genes.includes("Spider")) return "Banana Bee";
    return genes.join(" ");
}

function sellSnake() {
    let output = "Select a snake to sell:<br>";
    player.snakes.forEach((snake, index) => {
        output += `${index + 1}. ${snake.name} ($${snake.basePrice})<br>`;
    });
    output += '<input id="sellInput" type="text" placeholder="e.g., 1"><button onclick="executeSell()">Sell</button>';
    return output;
}

function executeSell() {
    const index = parseInt(document.getElementById("sellInput")?.value) - 1;
    const outputDiv = document.getElementById("output");
    if (!outputDiv || isNaN(index) || index < 0 || index >= player.snakes.length) {
        if (outputDiv) outputDiv.innerHTML = "Invalid selection!";
        return;
    }
    const snake = player.snakes[index];
    player.currency += snake.basePrice;
    player.reputation += 1;
    player.snakes.splice(index, 1);
    outputDiv.innerHTML = `Sold ${snake.name} for $${snake.basePrice}`;
    displayGameState();
}

function buySnake() {
    let output = "Snakes for sale:<br>";
    const availableSnakes = ["Normal ($25)", "Pastel ($50)", "Banana ($100)", "Piebald ($400)", "Puzzle Pastel ($5000)"];
    availableSnakes.forEach((snake, index) => {
        output += `${index + 1}. ${snake}<br>`;
    });
    output += '<input id="buyInput" type="text" placeholder="e.g., 1"><button onclick="executeBuy()">Buy</button>';
    return output;
}

function executeBuy() {
    const availableSnakes = ["Normal ($25)", "Pastel ($50)", "Banana ($100)", "Piebald ($400)", "Puzzle Pastel ($5000)"];
    const index = parseInt(document.getElementById("buyInput")?.value) - 1;
    const outputDiv = document.getElementById("output");
    if (!outputDiv || isNaN(index) || index < 0 || index >= availableSnakes.length) {
        if (outputDiv) outputDiv.innerHTML = "Invalid selection!";
        return;
    }
    const snakeStr = availableSnakes[index];
    const price = parseInt(snakeStr.match(/\d+/)[0]);
    if (player.currency < price) {
        outputDiv.innerHTML = "Not enough currency!";
        return;
    }
    player.currency -= price;
    const name = snakeStr.split(" (")[0];
    const puzzleScore = name.includes("Puzzle") ? 90 : (["Piebald", "Patternless"].includes(name) ? 30 : 10);
    const genes = name.includes(" ") ? name.split(" ") : [name];
    const snake = { name: name, genes: genes, puzzleInfluenceScore: puzzleScore, basePrice: price };
    player.snakes.push(snake);
    outputDiv.innerHTML = `Bought ${name} for $${price}`;
    displayGameState();
}

function expo() {
    let output = "Welcome to the Reptile Expo!<br>";
    output += "Set up a table for $20? (Y/N)<br>";
    output += '<input id="tableInput" type="text" placeholder="Y or N"><button onclick="setupTable()">Confirm</button>';
    return output;
}

function setupTable() {
    const input = document.getElementById("tableInput")?.value.toUpperCase();
    const outputDiv = document.getElementById("output");
    if (!outputDiv) return;
    let output = "";
    if (input === "Y") {
        if (player.currency < 20) {
            output = "Not enough currency!";
        } else {
            player.currency -= 20;
            output = "Select up to 3 snakes to display (enter numbers separated by spaces):<br>";
            player.snakes.forEach((snake, index) => {
                output += `${index + 1}. ${snake.name} ($${snake.basePrice})<br>`;
            });
            output += '<input id="displayInput" type="text" placeholder="e.g., 1 2 3"><button onclick="displaySnakes()">Display</button>';
        }
    } else {
        output = "Skipped table setup.<br>";
    }
    output += "<br>Auction a snake? (Y/N)<br>";
    output += '<input id="auctionInput" type="text" placeholder="Y or N"><button onclick="auctionSnake()">Confirm</button>';
    outputDiv.innerHTML = output;
}

function displaySnakes() {
    const input = document.getElementById("displayInput")?.value.split(" ") || [];
    const selected = input.map(i => parseInt(i) - 1).filter(i => !isNaN(i) && i >= 0 && i < player.snakes.length);
    if (selected.length > 3) selected.splice(3);
    const outputDiv = document.getElementById("output");
    if (!outputDiv) return;
    let output = "Table set up! Results:<br>";
    let toRemove = [];
    selected.forEach(index => {
        const snake = player.snakes[index];
        if (Math.random() < 0.5) {  // 50% chance of sale
            player.currency += snake.basePrice;
            player.reputation += 1;
            output += `Sold ${snake.name} for $${snake.basePrice}<br>`;
            toRemove.push(index);
        }
    });
    toRemove.sort((a, b) => b - a).forEach(index => player.snakes.splice(index, 1));
    output += "<br>Auction a snake? (Y/N)<br>";
    output += '<input id="auctionInput" type="text" placeholder="Y or N"><button onclick="auctionSnake()">Confirm</button>';
    outputDiv.innerHTML = output;
    displayGameState();
}

function auctionSnake() {
    const input = document.getElementById("auctionInput")?.value.toUpperCase();
    const outputDiv = document.getElementById("output");
    if (!outputDiv) return;
    let output = "";
    if (input === "Y") {
        output = "Select a snake to auction:<br>";
        player.snakes.forEach((snake, index) => {
            output += `${index + 1}. ${snake.name}<br>`;
        });
        output += '<input id="auctionSelect" type="text" placeholder="e.g., 1"><button onclick="executeAuction()">Auction</button>';
    } else {
        output = "Skipped auction.<br>";
    }
    output += "<br>Buy from other players:<br>";
    const availableSnakes = ["Banana ($100)", "Piebald ($400)", "Puzzle Pastel ($5000)", "Clown ($450)", "Normal ($25)"];
    availableSnakes.forEach((snake, index) => {
        output += `${index + 1}. ${snake}<br>`;
    });
    output += '<input id="buyExpoInput" type="text" placeholder="e.g., 1"><button onclick="buyFromExpo()">Buy</button>';
    outputDiv.innerHTML = output;
}

function executeAuction() {
    const index = parseInt(document.getElementById("auctionSelect")?.value) - 1;
    const outputDiv = document.getElementById("output");
    if (!outputDiv || isNaN(index) || index < 0 || index >= player.snakes.length) {
        if (outputDiv) outputDiv.innerHTML = "Invalid selection!";
        return;
    }
    const snake = player.snakes[index];
    const bid = Math.round(snake.basePrice * (0.7 + Math.random() * 0.8));  // 70%–150%
    player.currency += bid * 0.9;  // 10% fee
    player.reputation += 2;
    player.snakes.splice(index, 1);
    let output = `Auctioned ${snake.name} for $${bid}<br>`;
    output += "<br>Buy from other players:<br>";
    const availableSnakes = ["Banana ($100)", "Piebald ($400)", "Puzzle Pastel ($5000)", "Clown ($450)", "Normal ($25)"];
    availableSnakes.forEach((snake, index) => {
        output += `${index + 1}. ${snake}<br>`;
    });
    output += '<input id="buyExpoInput" type="text" placeholder="e.g., 1"><button onclick="buyFromExpo()">Buy</button>';
    outputDiv.innerHTML = output;
    displayGameState();
}

function buyFromExpo() {
    const availableSnakes = ["Banana ($100)", "Piebald ($400)", "Puzzle Pastel ($5000)", "Clown ($450)", "Normal ($25)"];
    const index = parseInt(document.getElementById("buyExpoInput")?.value) - 1;
    const outputDiv = document.getElementById("output");
    if (!outputDiv || isNaN(index) || index < 0 || index >= availableSnakes.length) {
        if (outputDiv) outputDiv.innerHTML = "Invalid selection!";
        return;
    }
    const snakeStr = availableSnakes[index];
    const price = parseInt(snakeStr.match(/\d+/)[0]);
    if (player.currency < price) {
        outputDiv.innerHTML = "Not enough currency!";
        return;
    }
    player.currency -= price;
    const name = snakeStr.split(" (")[0];
    const puzzleScore = name.includes("Puzzle") ? 90 : (["Piebald", "Patternless"].includes(name) ? 30 : 10);
    const genes = name.includes(" ") ? name.split(" ") : [name];
    const snake = { name: name, genes: genes, puzzleInfluenceScore: puzzleScore, basePrice: price };
    player.snakes.push(snake);
    outputDiv.innerHTML = `Bought ${name} for $${price}`;
    displayGameState();
}
